import{_ as l,c as o,a2 as t,o as c}from"./chunks/framework.CU2KmuNA.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"assert_type.md","filePath":"assert_type.md"}'),i={name:"assert_type.md"};function d(s,e,a,n,r,_){return c(),o("div",null,e[0]||(e[0]=[t('<div class="tip custom-block"><p class="custom-block-title">提示</p><p>仅适用于非常规断言方式，断言方式请查看 <a href="./case_data.html#assert">assert</a> 参数</p></div><ul><li><code>eq</code>: 预期结果与实际结果相等</li><li><code>not_eq</code>: 预期结果不等于实际结果</li><li><code>gt</code>: 预期结果大于实际结果</li><li><code>ge</code>: 预期结果大于等于实际结果</li><li><code>lt</code>: 预期结果小于实际结果</li><li><code>le</code>: 预期结果小于等于实际结果</li><li><code>str_eq</code>: 预期结果和实际结果字符串相等</li><li><code>len_eq</code>: 预期结果长度等于实际结果</li><li><code>not_len_eq</code>: 预期结果长度不等于实际结果</li><li><code>len_lt</code>: 预期结果长度小于实际结果</li><li><code>len_le</code>: 预期结果长度小于等于实际结果</li><li><code>len_gt</code>: 预期结果长度大于实际结果</li><li><code>len_ge</code>: 预期结果长度大于等于实际结果</li><li><code>contains</code>: 预期结果内容包含在实际结果中</li><li><code>not_contains</code>: 预期结果内容不包含在实际结果中</li><li><code>startswith</code>: 实际结果的开头是预期结果</li><li><code>endswith</code>: 实际结果的结尾是预期结果</li></ul>',2)]))}const f=l(i,[["render",d]]);export{m as __pageData,f as default};
