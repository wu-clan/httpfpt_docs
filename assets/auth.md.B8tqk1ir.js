import{_ as i,c as a,a2 as e,o as n}from"./chunks/framework.CU2KmuNA.js";const c=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"auth.md","filePath":"auth.md"}'),t={name:"auth.md"};function l(k,s,h,p,o,r){return n(),a("div",null,s[0]||(s[0]=[e(`<div class="tip custom-block"><p class="custom-block-title">TIP</p><p>配置位于 core 目录下的 auth.yaml 文件中，只需修改配置文件，无需额外操作</p></div><ul><li><code>is_auth</code>: 是否开启自动授权</li><li><code>auth_type</code>: 授权方式，支持以下之一 <code>[&#39;bearer_token&#39;, &#39;bearer_token_custom&#39;, &#39;header_cookie&#39;]</code></li></ul><h2 id="bearer-token" tabindex="-1">Bearer Token <a class="header-anchor" href="#bearer-token" aria-label="Permalink to &quot;Bearer Token&quot;">​</a></h2><p>JWT 认证，自动添加至每个请求的请求头中</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>如果在请求数据中手动配置了 token，并且打开了自动授权，那么自定义 token 将被更新为当前 token 值</p></div><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">bearer_token</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  url</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">https://api.pity.fun/auth/login</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  username</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">tester</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  password</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">tester</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  headers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    Content-Type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">application/json</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    User-Agent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.0.0 Safari/537.36</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  token_key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">$.data.token</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  timeout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100000</span></span></code></pre></div><ul><li><code>url</code>: 获取 token 的登录地址</li><li><code>username</code>: 用户名</li><li><code>password</code>: 密码</li><li><code>headers</code>: 请求头</li><li><code>token_key</code>: jsonpath 表达式，用于从响应中提取 token 值</li><li><code>timeout</code>: 自定义当前 token 超时时间，而非服务器 token 本身超时时间，token 会根据此时间进行缓存, 避免频繁请求</li></ul><hr><h2 id="bearer-token-custom" tabindex="-1">Bearer Token Custom <a class="header-anchor" href="#bearer-token-custom" aria-label="Permalink to &quot;Bearer Token Custom&quot;">​</a></h2><p>JWT 认证，自动添加至每个请求的请求头中</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">bearer_token_custom</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  token</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">xxx</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  timeout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100000</span></span></code></pre></div><ul><li><code>token</code>: 设置 token 值，用于自动授权</li><li><code>timeout</code>: 自定义当前 token 超时时间，而非服务器 token 本身超时时间，token 会根据此时间进行缓存, 避免频繁请求</li></ul><hr><h2 id="cookies" tabindex="-1">Cookies <a class="header-anchor" href="#cookies" aria-label="Permalink to &quot;Cookies&quot;">​</a></h2><p>Cookie 认证，自动添加到请求头中</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">header_cookie</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  url</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">xxx</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  username</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">xxx</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  password</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">xxx</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  headers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    Content-Type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">application/json</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    User-Agent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.0.0 Safari/537.36</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  timeout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100000</span></span></code></pre></div><ul><li><code>url</code>: 获取 token 的登录地址</li><li><code>username</code>: 用户名</li><li><code>password</code>: 密码</li><li><code>headers</code>: 请求头</li><li><code>timeout</code>: 自定义当前 token 超时时间，而非服务器 token 本身超时时间，token 会根据此时间进行缓存, 避免频繁请求</li></ul>`,17)]))}const E=i(t,[["render",l]]);export{c as __pageData,E as default};
