import{_ as o,c as i,a2 as l,o as d}from"./chunks/framework.CU2KmuNA.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"config.md","filePath":"config.md"}'),c={name:"config.md"};function t(a,e,r,s,h,p){return d(),i("div",null,e[0]||(e[0]=[l('<div class="tip custom-block"><p class="custom-block-title">配置文件</p><p>/core/conf.toml</p></div><h2 id="🔧-project" tabindex="-1">🔧 project <a class="header-anchor" href="#🔧-project" aria-label="Permalink to &quot;🔧 project&quot;">​</a></h2><p>测试项目配置</p><ul><li><code>name</code>：指定测试项目，详情请查看：<a href="/httpfpt_docs/projects.html">多项目？</a></li></ul><h2 id="🔧-report" tabindex="-1">🔧 report <a class="header-anchor" href="#🔧-report" aria-label="Permalink to &quot;🔧 report&quot;">​</a></h2><p>测试报告配置</p><ul><li><code>title</code>： 测试报告标题</li><li><code>tester_name</code>： 测试人员名称</li></ul><h2 id="🔧-mysql" tabindex="-1">🔧 mysql <a class="header-anchor" href="#🔧-mysql" aria-label="Permalink to &quot;🔧 mysql&quot;">​</a></h2><p>MySQL 数据库配置</p><ul><li><code>host</code>： 主机 IP</li><li><code>port</code>： 端口</li><li><code>user</code>： 用户名</li><li><code>password</code>： 密码</li><li><code>database</code>： 需要连接的数据库名称</li></ul><h2 id="🔧-redis" tabindex="-1">🔧 redis <a class="header-anchor" href="#🔧-redis" aria-label="Permalink to &quot;🔧 redis&quot;">​</a></h2><p>Redis 数据库配置</p><ul><li><code>host</code>： 主机 IP</li><li><code>port</code>： 端口号</li><li><code>password</code>： 密码</li><li><code>database</code>： 指定数据库 [0-16]</li><li><code>timeout</code>： 连接超时时间</li></ul><h2 id="🔧-email" tabindex="-1">🔧 email <a class="header-anchor" href="#🔧-email" aria-label="Permalink to &quot;🔧 email&quot;">​</a></h2><p>邮件发送配置</p><ul><li><code>host</code>： 邮件服务器</li><li><code>port</code>： 端口号</li><li><code>user</code>： 用户名</li><li><code>password</code>： 密码（服务密码，非邮箱密码）</li><li><code>receiver</code>： 收件人</li><li><code>ssl</code>： 是否 SSL 验证</li><li><code>send</code>： 是否发送邮件测试报告，默认关闭</li></ul><h2 id="🔧-dingding" tabindex="-1">🔧 dingding <a class="header-anchor" href="#🔧-dingding" aria-label="Permalink to &quot;🔧 dingding&quot;">​</a></h2><p>钉钉推送配置</p><ul><li><code>webhook</code>： 钉钉机器人 webhook 地址</li><li><code>proxies.http</code>： 请求 http 代理</li><li><code>proxies.https</code>： 请求 https 代理</li><li><code>send</code>： 是否发送钉钉测试报告，默认关闭</li></ul><h2 id="🔧-feishu" tabindex="-1">🔧 feishu <a class="header-anchor" href="#🔧-feishu" aria-label="Permalink to &quot;🔧 feishu&quot;">​</a></h2><p>飞书推送配置</p><ul><li><code>webhook</code>： 飞书机器人 webhook 地址</li><li><code>proxies.http</code>： 请求 http 代理</li><li><code>proxies.https</code>： 请求 https 代理</li><li><code>send</code>： 是否发送飞书测试报告，默认关闭</li></ul><h2 id="🔧-wechat" tabindex="-1">🔧 wechat <a class="header-anchor" href="#🔧-wechat" aria-label="Permalink to &quot;🔧 wechat&quot;">​</a></h2><p>企业微信推送配置</p><ul><li><code>webhook</code>： 企微机器人 webhook 地址</li><li><code>proxies.http</code>： 请求 http 代理</li><li><code>proxies.https</code>： 请求 https 代理</li><li><code>send</code>： 是否发送企微测试报告，默认关闭</li></ul><h2 id="🔧-request" tabindex="-1">🔧 request <a class="header-anchor" href="#🔧-request" aria-label="Permalink to &quot;🔧 request&quot;">​</a></h2><p>请求发送默认基础配置</p><ul><li><code>global_env</code>：全局统一测试环境，默认为空字符串</li><li><code>timeout</code>： 请求超时时间，默认 10 s</li><li><code>verify</code>： 请求验证，默认关闭</li><li><code>redirects</code>： 跟随重定向，默认开启</li><li><code>proxies.http</code>： 请求 http 代理</li><li><code>proxies.https</code>： 请求 https 代理</li><li><code>retry</code>： 请求响应异常重试，默认 3 次</li></ul><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p><code>global_env</code>: 位于 core/run_env/ 目录下的文件名，必须以 <code>.env</code> 结尾，如果使用此配置， 将覆盖所有测试用例数据中的 <code>env</code> 配置，这有助于统一全局测试环境；</p></div>',29)]))}const m=o(c,[["render",t]]);export{u as __pageData,m as default};
