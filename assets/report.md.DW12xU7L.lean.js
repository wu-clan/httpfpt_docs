import{_ as i,c as t,a2 as e,o as r}from"./chunks/framework.CU2KmuNA.js";const l="/httpfpt_docs/assets/img/allure_report.jpg",p="/httpfpt_docs/assets/img/html_report.jpg",s="/httpfpt_docs/assets/img/ding_report.jpg",n="/httpfpt_docs/assets/img/lark_report.jpg",h="/httpfpt_docs/assets/img/email_report.jpg",y=JSON.parse('{"title":"预览","description":"","frontmatter":{},"headers":[],"relativePath":"report.md","filePath":"report.md"}'),o={name:"report.md"};function k(d,a,c,m,g,u){return r(),t("div",null,a[0]||(a[0]=[e(`<h1 id="预览" tabindex="-1">预览 <a class="header-anchor" href="#预览" aria-label="Permalink to &quot;预览&quot;">​</a></h1><h2 id="📝-测试报告说明" tabindex="-1">📝 测试报告说明 <a class="header-anchor" href="#📝-测试报告说明" aria-label="Permalink to &quot;📝 测试报告说明&quot;">​</a></h2><p>测试执行完毕后, 测试报告会自动生成到 report 文件夹下</p><ul><li>yaml：测试报告主要用来收集测试结果，用作存储结果数据</li><li>allure：测试报告需启用并正确安装 allure 服务，默认开启</li><li>html：测试报告无需额外配置，默认开启，需手动在文件夹下浏览</li><li>钉钉 / 飞书 / 邮箱 / 企微：测试报告需正确配置并打开发送开关，测试运行完成后将自动推送</li></ul><h2 id="🔍-yaml-report" tabindex="-1">🔍 Yaml Report <a class="header-anchor" href="#🔍-yaml-report" aria-label="Permalink to &quot;🔍 Yaml Report&quot;">​</a></h2><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">elapsed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">9.003</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">failed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">passed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">result</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Failed</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">skipped</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">started_time</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;2023-04-01 16:05:37&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">total</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">9</span></span></code></pre></div><h2 id="🔍-allure-report" tabindex="-1">🔍 Allure Report <a class="header-anchor" href="#🔍-allure-report" aria-label="Permalink to &quot;🔍 Allure Report&quot;">​</a></h2><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>allure 测试报告默认使用 allure-pytest 生成，但是不能直接访问，有以下选择</p><ol><li>本地访问：你必须安装 <a href="https://www.yuque.com/poloyy/python/aiqlmi" target="_blank" rel="noreferrer">allure</a> 程序和 <a href="https://adoptopenjdk.net/archive.html?variant=openjdk8&amp;jvmVariant=hotspot" target="_blank" rel="noreferrer">Java JDK</a> 才能进行本地可视化浏览</li><li>Jenkins：将 allure 测试报告集成到到 Jenkins 中</li></ol></div><p><img src="`+l+'" alt=""></p><h2 id="🔍-html-report" tabindex="-1">🔍 Html Report <a class="header-anchor" href="#🔍-html-report" aria-label="Permalink to &quot;🔍 Html Report&quot;">​</a></h2><p><img src="'+p+'" alt=""></p><h2 id="🔍-dingding-report" tabindex="-1">🔍 DingDing Report <a class="header-anchor" href="#🔍-dingding-report" aria-label="Permalink to &quot;🔍 DingDing Report&quot;">​</a></h2><p><img src="'+s+'" alt=""></p><h2 id="🔍-wechat-report" tabindex="-1">🔍 WeChat Report <a class="header-anchor" href="#🔍-wechat-report" aria-label="Permalink to &quot;🔍 WeChat Report&quot;">​</a></h2><p><img src="'+s+'" alt=""></p><h2 id="🔍-feishu-report" tabindex="-1">🔍 FeiShu Report <a class="header-anchor" href="#🔍-feishu-report" aria-label="Permalink to &quot;🔍 FeiShu Report&quot;">​</a></h2><p><img src="'+n+'" alt=""></p><h2 id="🔍-email-report" tabindex="-1">🔍 Email Report <a class="header-anchor" href="#🔍-email-report" aria-label="Permalink to &quot;🔍 Email Report&quot;">​</a></h2><p><img src="'+h+'" alt=""></p>',19)]))}const _=i(o,[["render",k]]);export{y as __pageData,_ as default};
