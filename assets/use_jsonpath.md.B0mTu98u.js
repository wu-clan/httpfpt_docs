import{_ as a,c as i,a2 as t,o as n}from"./chunks/framework.CU2KmuNA.js";const d=JSON.parse('{"title":"JsonPath","description":"","frontmatter":{},"headers":[],"relativePath":"use_jsonpath.md","filePath":"use_jsonpath.md"}'),h={name:"use_jsonpath.md"};function e(l,s,p,k,r,o){return n(),i("div",null,s[0]||(s[0]=[t(`<h1 id="jsonpath" tabindex="-1">JsonPath <a class="header-anchor" href="#jsonpath" aria-label="Permalink to &quot;JsonPath&quot;">​</a></h1><h2 id="jsonpath-引导" tabindex="-1">JsonPath 引导 <a class="header-anchor" href="#jsonpath-引导" aria-label="Permalink to &quot;JsonPath 引导&quot;">​</a></h2><p>官方文档：</p><ul><li><a href="https://goessner.net/articles/JsonPath/" target="_blank" rel="noreferrer">XPath for JSON</a></li><li><a href="https://datatracker.ietf.org/doc/html/rfc9535" target="_blank" rel="noreferrer">rfc 9535</a></li></ul><p>框架内部依赖：</p><ul><li><a href="https://github.com/jg-rp/python-jsonpath" target="_blank" rel="noreferrer">python-jsonpath</a></li></ul><p>JsonPath 语法：</p><ul><li><a href="https://jg-rp.github.io/python-jsonpath/syntax/" target="_blank" rel="noreferrer">语法实现</a></li><li><a href="https://jg-rp.github.io/python-jsonpath/syntax/#notable-differences" target="_blank" rel="noreferrer">语法差异</a></li></ul><p>辅助工具：</p><ul><li><a href="https://www.jsonpath.cn/" target="_blank" rel="noreferrer">非完全标准在线验证</a></li></ul><h2 id="response-数据集" tabindex="-1">response 数据集 <a class="header-anchor" href="#response-数据集" aria-label="Permalink to &quot;response 数据集&quot;">​</a></h2><p>响应数据集结构如下，你也可以在源代码的 send_request.py 文件中查看它</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;url&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;响应地址&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;status_code&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;响应状态码&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;elapsed&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;请求耗时&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;headers&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;响应请求头&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;cookies&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;响应 cookies&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;json&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;响应 json&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;content&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;响应字节&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;text&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;响应文本&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;stat&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;execute_time&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;请求执行开始时间&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;request&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;接口请求参数&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="jsonpath-取值" tabindex="-1">JsonPath 取值 <a class="header-anchor" href="#jsonpath-取值" aria-label="Permalink to &quot;JsonPath 取值&quot;">​</a></h2><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>不要直接根据接口响应结果进行 JsonPath 取值</p><p>如果不会使用 JsonPath，先移步至 <a href="#jsonpath-引导">JsonPath引导</a> 进行了解</p></div><ul><li><p>接口请求：</p><p>JsonPath 取值依赖 <a href="#response-数据集">response 数据集</a>，也就是说，接口响应数据将放置在响应集中，JsonPath 表达式根应为数据集；</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># examples</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">jsonpath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">$.url</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 获取接口响应地址</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">jsonpath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">$.json.xxx</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 获取接口响应 json 中的数据</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">...</span></span></code></pre></div></li><li><p>SQL 查询：</p><p>JsonPath 取值依赖于 SQL 执行结果</p></li></ul>`,16)]))}const u=a(h,[["render",e]]);export{d as __pageData,u as default};
